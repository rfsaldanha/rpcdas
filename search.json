[{"path":"https://rfsaldanha.github.io/rpcdas/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 rpcdas authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Raphael Saldanha. Author, maintainer.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Saldanha R (2024). rpcdas: PCDaS API Wrapper. R package version 0.4.0, https://rfsaldanha.github.io/rpcdas/.","code":"@Manual{,   title = {rpcdas: PCDaS API Wrapper},   author = {Raphael Saldanha},   year = {2024},   note = {R package version 0.4.0},   url = {https://rfsaldanha.github.io/rpcdas/}, }"},{"path":"https://rfsaldanha.github.io/rpcdas/index.html","id":"rpcdas-an-r-pcdas-api-wrapper","dir":"","previous_headings":"","what":"PCDaS API Wrapper","title":"PCDaS API Wrapper","text":"rpcdas R package wrapper functions PCDaS API.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/index.html","id":"instalation","dir":"","previous_headings":"","what":"Instalation","title":"PCDaS API Wrapper","text":"Currently, package available Github. {r} remotes::install_github(\"rfsaldanha/rpcdas\") library(rpcdas)","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/index.html","id":"token","dir":"","previous_headings":"","what":"Token","title":"PCDaS API Wrapper","text":"PCDaS API requires access token. receiving token, can inform package function store token renviron convenient use. {r} Sys.setenv(\"pcdas_token\" = \"YOUR_PCDAS_TOKEN\") running line , package functions access PCDaS token internally.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"PCDaS API Wrapper","text":"package provides functions convenient use PCDaS API.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/index.html","id":"list-available-indexes","dir":"","previous_headings":"Usage","what":"List available indexes","title":"PCDaS API Wrapper","text":"{r} list_pcdas_tables() function list available indexes token.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/index.html","id":"sim","dir":"","previous_headings":"Usage","what":"SIM","title":"PCDaS API Wrapper","text":"```{r} # Total number deaths municipality residence 2010. get_sim(agg = “mun_res”, ano = 2010)","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/index.html","id":"total-number-of-deaths-by-state-of-occurrence-in-2010","dir":"","previous_headings":"","what":"Total number of deaths by state of occurrence in 2010.","title":"PCDaS API Wrapper","text":"get_sim(agg = “uf_ocor”, ano = 2010)","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/index.html","id":"total-number-of-deaths-by-state-of-residence-in-2010-filtering-ages-between-10-and-30-years-old","dir":"","previous_headings":"","what":"Total number of deaths by state of residence in 2010, filtering ages between 10 and 30 years old.","title":"PCDaS API Wrapper","text":"get_sim(agg = “uf_res”, ano = 2010, idade_a = 10, idade_b = 30)","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/index.html","id":"total-number-of-deaths-by-state-of-residence-in-2010-were-the-basic-cause-of-death-starting-with-the-letter-i","dir":"","previous_headings":"","what":"Total number of deaths by state of residence in 2010 were the basic cause of death starting with the letter I.","title":"PCDaS API Wrapper","text":"get_sim(agg = “uf_res”, ano = 2010, cid_like = “”)","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/index.html","id":"total-number-of-deaths-by-state-of-residence-in-2010-were-the-basic-cause-of-deaths-are-some-of-the-vector","dir":"","previous_headings":"","what":"Total number of deaths by state of residence in 2010 were the basic cause of deaths are some of the vector.","title":"PCDaS API Wrapper","text":"get_sim(agg = “uf_res”, ano = 2010, cid_in = c(“I219”, “B342”, “R98”))","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/index.html","id":"total-number-of-deaths-by-state-of-residence-in-2010-with-a-sql-filter","dir":"","previous_headings":"","what":"Total number of deaths by state of residence in 2010 with a SQL filter.","title":"PCDaS API Wrapper","text":"get_sim(agg = “uf_res”, ano = 2010, more_filters = “LEFT(CAUSABAS, 1) (‘V’, ‘W’, ‘X’, ‘Y’)”)","code":"### SINASC  ```{r} # Total number of births by municipality of residence in 2010 get_sinasc(agg = \"mun_res\", ano = 2010)  # Total number of births by state of borth in 2010 get_sinasc(agg = \"uf_ocor\", ano = 2010)  # Total number of births by municipality of residence in 2010, with sex filter get_sinasc(agg = \"mun_res\", ano = 2010, sexo = \"Masculino\")"},{"path":"https://rfsaldanha.github.io/rpcdas/index.html","id":"sih","dir":"","previous_headings":"","what":"SIH","title":"PCDaS API Wrapper","text":"```{r} # Total number hospitalizations municipality residence 2010 get_sih(agg = “mun_res”, ano = 2010)","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/index.html","id":"total-number-of-hospitalizations-by-state-of-the-hospital-in-2010","dir":"","previous_headings":"","what":"Total number of hospitalizations by state of the hospital in 2010","title":"PCDaS API Wrapper","text":"get_sih(agg = “uf_ocor”, ano = 2010)","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/index.html","id":"total-number-of-hospitalizations-by-municipality-of-residence-in-2010-with-sex-filter","dir":"","previous_headings":"","what":"Total number of hospitalizations by municipality of residence in 2010 with sex filter","title":"PCDaS API Wrapper","text":"get_sih(agg = “mun_res”, ano = 2010, sexo = “Masculino”)","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/index.html","id":"total-number-of-hospitalizations-by-state-of-residence-in-2010-with-age-filters","dir":"","previous_headings":"","what":"Total number of hospitalizations by state of residence in 2010 with age filters","title":"PCDaS API Wrapper","text":"get_sih(agg = “uf_res”, ano = 2010, idade_a = 10, idade_b = 30) query may return 10,000 lines maximum.","code":"### Generic query  This function allows a generic query to the PCDaS indexes where you should write a SQL query.  ```{r} generic_pcdas_query(sql_query = \"SELECT N_AIH, DT_INTER, PROC_REA FROM \\\"datasus-sih\\\" LIMIT 100\")"},{"path":"https://rfsaldanha.github.io/rpcdas/reference/cid_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CID sequences — cid_seq","title":"Create CID sequences — cid_seq","text":"Helper function create CID sequences.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/cid_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CID sequences — cid_seq","text":"","code":"cid_seq(a, b)"},{"path":"https://rfsaldanha.github.io/rpcdas/reference/cid_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CID sequences — cid_seq","text":"character. Starting CID code. b character. Ending CID code.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/cid_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create CID sequences — cid_seq","text":"character vector.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/cid_seq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create CID sequences — cid_seq","text":"'' letter must equal 'b' letter.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/cid_seq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create CID sequences — cid_seq","text":"","code":"# Creates a sequence cid_seq(a = \"A01\", b = \"A10\") #>  [1] \"A01\" \"A02\" \"A03\" \"A04\" \"A05\" \"A06\" \"A07\" \"A08\" \"A09\" \"A10\""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/convert_content_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert API content to a tibble — convert_content_to_df","title":"Convert API content to a tibble — convert_content_to_df","text":"Convert content received PCDaS API query tibble object.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/convert_content_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert API content to a tibble — convert_content_to_df","text":"","code":"convert_content_to_df(content)"},{"path":"https://rfsaldanha.github.io/rpcdas/reference/convert_content_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert API content to a tibble — convert_content_to_df","text":"content Content API.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/convert_content_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert API content to a tibble — convert_content_to_df","text":"data.frame","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/generic_pcdas_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Executes a generic PCDaS query — generic_pcdas_query","title":"Executes a generic PCDaS query — generic_pcdas_query","text":"Executes generic PCDaS API query.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/generic_pcdas_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Executes a generic PCDaS query — generic_pcdas_query","text":"","code":"generic_pcdas_query(pcdas_token = NULL, sql_query, fetch_size = 65000)"},{"path":"https://rfsaldanha.github.io/rpcdas/reference/generic_pcdas_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Executes a generic PCDaS query — generic_pcdas_query","text":"pcdas_token character. PCDaS API token. provided, function look renvirom. sql_query character. SQL. fetch_size character. Pagination size API call.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/generic_pcdas_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Executes a generic PCDaS query — generic_pcdas_query","text":"tibble","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/generic_pcdas_query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Executes a generic PCDaS query — generic_pcdas_query","text":"query limited retrieve 100 variables 10,000 records ElasticSearch cluster. query, must usea database listed list_pcdas_tables.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/generic_pcdas_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Executes a generic PCDaS query — generic_pcdas_query","text":"","code":"# Runs a query generic_pcdas_query(sql_query = \"SELECT N_AIH, DT_INTER, PROC_REA FROM \\\"datasus-sih\\\" LIMIT 100\") #> Error in get_pcdas_token_renviron(): PCDaS token API not provided and not found on renviron. Please provide PCDaS API token."},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_audio_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Get audio from text string — get_audio_description","title":"Get audio from text string — get_audio_description","text":"Get audio text string","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_audio_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get audio from text string — get_audio_description","text":"","code":"get_audio_description(   text,   dest_file,   pcdas_token = NULL,   throttle_rate = 1,   max_tries = 10 )"},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_audio_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get audio from text string — get_audio_description","text":"text character. text string. dest_file character. Path destination audio file. output mp3 binary. pcdas_token character. PCDaS API token. provided, function look renvirom. throttle_rate Rate requests per second allowed. Defaults 1 request per second. max_tries Max number retries fail. Defaults 10.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_audio_description.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get audio from text string — get_audio_description","text":"audio file.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_audio_description.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get audio from text string — get_audio_description","text":"","code":"file <- tempfile(fileext = \".mp3\") get_audio_description(text = \"Ciência de Dados, para nós da PCDaS, é um campo de estudo que se destaca pela capacidade de auxiliar a descoberta de informação útil a partir de grandes ou complexas bases de dados.\", dest_file = file) #> Error in get_pcdas_token_renviron(): PCDaS token API not provided and not found on renviron. Please provide PCDaS API token."},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_pcdas_token_renviron.html","id":null,"dir":"Reference","previous_headings":"","what":"Get PCDaS token from renviron — get_pcdas_token_renviron","title":"Get PCDaS token from renviron — get_pcdas_token_renviron","text":"Get PCDaS token renviron","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_pcdas_token_renviron.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get PCDaS token from renviron — get_pcdas_token_renviron","text":"","code":"get_pcdas_token_renviron()"},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_pcdas_token_renviron.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get PCDaS token from renviron — get_pcdas_token_renviron","text":"character.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_pcdas_token_renviron.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get PCDaS token from renviron — get_pcdas_token_renviron","text":"PCDaS token may stored renviron Sys.setenv(\"pcdas_token\" = \"YOUR_PCDAS_TOKEN\"). function retrivies token stored renviron.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_sih.html","id":null,"dir":"Reference","previous_headings":"","what":"Get hospitalization data from SIH — get_sih","title":"Get hospitalization data from SIH — get_sih","text":"Retrieves hospitalization data PCDaS API.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_sih.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get hospitalization data from SIH — get_sih","text":"","code":"get_sih(   agg,   agg_time = \"year\",   ano,   pcdas_token = NULL,   sexo = NULL,   idade_a = NULL,   idade_b = NULL,   more_filters = NULL,   fetch_size = 65000 )"},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_sih.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get hospitalization data from SIH — get_sih","text":"agg character. Spatial aggregation level. uf_res UF residence. uf_ocor UF occurrence. regsaude_res regiao de saude residence. regsaude_ocor regiao de saude occurence. regsaude_449_res regiao de saude (449 units) residence. regsaude_449_ocor regiao de saude (449 units) occurence. mun_res municipality residence. mun_ocor municipality ocurrence. agg_time character. Time aggregation level. year yearly data. month monthly data. week weekly data. Defaults year. ano numeric. Year birth pcdas_token character. PCDaS API token. provided, function look renvirom. sexo character. Sex new birth Masculino males, Feminino females Ignorado unknown. idade_a numeric. Minimum age patient, years. idade_b numeric. Maximum age patient, years. more_filters character. Additional filters can added using parameter, SQL query. fetch_size character. Pagination size API call.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_sih.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get hospitalization data from SIH — get_sih","text":"function uses raw data Sistema de Informações de Hospitalares SUS (SIH) available PCDaS API. documentation data can found https://pcdas.icict.fiocruz.br/conjunto-de-dados/sistema-de-informacoes-hospitalares--sus-sihsus/. idade_a supplied, query filter records age less equal. idade_b supplied, query filter records age equal. supplied, query filter records interval, closed sides.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_sih.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get hospitalization data from SIH — get_sih","text":"","code":"# Some examples get_sih(agg = \"mun_res\", ano = 2010) #> Error in get_pcdas_token_renviron(): PCDaS token API not provided and not found on renviron. Please provide PCDaS API token. get_sih(agg = \"uf_ocor\", ano = 2010) #> Error in get_pcdas_token_renviron(): PCDaS token API not provided and not found on renviron. Please provide PCDaS API token."},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mortality data from SIM — get_sim","title":"Get mortality data from SIM — get_sim","text":"Retrieves mortality data PCDaS API.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mortality data from SIM — get_sim","text":"","code":"get_sim(   agg,   agg_time = \"year\",   ano,   pcdas_token = NULL,   sexo = NULL,   idade_a = NULL,   idade_b = NULL,   cid_like = NULL,   cid_in = NULL,   more_filters = NULL,   fetch_size = 65000 )"},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mortality data from SIM — get_sim","text":"agg character. Spatial aggregation level. uf_res UF residence. uf_ocor UF occurrence. regsaude_res regiao de saude residence. regsaude_ocor regiao de saude occurence. regsaude_449_res regiao de saude (449 units) residence. regsaude_449_ocor regiao de saude (449 units) occurence. mun_res municipality residence. mun_ocor municipality ocurrence. agg_time character. Time aggregation level. year yearly data. month monthly data. week weekly data. Defaults year. ano vector. Year death. pcdas_token character. PCDaS API token. provided, function look renvirom. sexo character. Sex deceased. Masculino males, Feminino females Ignorado unknown. idade_a numeric. Minimum age deceased, years. idade_b numeric. Maximum age deceased, years. cid_like character. CID-10 code basic cause death. Used LIKE operator. cid_in character vector. CID-10 codes basic cause death. Used operator. more_filters character. Additional filters can added using parameter, SQL query. fetch_size character. Pagination size API call.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get mortality data from SIM — get_sim","text":"function uses raw data Sistema de Informações de Mortalidade (SIM) available PCDaS API. documentation data can found https://pcdas.icict.fiocruz.br/conjunto-de-dados/sistema-de-informacoes-de-mortalidade-sim/. idade_a supplied, query filter records age less equal. idade_b supplied, query filter records age equal. supplied, query filter records interval, closed sides. cid_like value used query LIKE operator.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get mortality data from SIM — get_sim","text":"","code":"# Some examples get_sim(agg = \"mun_res\", ano = 2010) #> Error in get_pcdas_token_renviron(): PCDaS token API not provided and not found on renviron. Please provide PCDaS API token. get_sim(agg = \"uf_ocor\", ano = 2010) #> Error in get_pcdas_token_renviron(): PCDaS token API not provided and not found on renviron. Please provide PCDaS API token. get_sim(agg = \"uf_res\", ano = 2010, idade_a = 10, idade_b = 30) #> Error in get_pcdas_token_renviron(): PCDaS token API not provided and not found on renviron. Please provide PCDaS API token. get_sim(agg = \"uf_res\", ano = 2010, cid_like = \"I\") #> Error in get_pcdas_token_renviron(): PCDaS token API not provided and not found on renviron. Please provide PCDaS API token. get_sim(agg = \"uf_res\", ano = 2010, cid_in = c(\"I219\", \"B342\", \"R98\")) #> Error in get_pcdas_token_renviron(): PCDaS token API not provided and not found on renviron. Please provide PCDaS API token. get_sim(agg = \"uf_res\", ano = 2010, cid_in = cid_seq(\"I01\", \"I10\")) #> Error in get_pcdas_token_renviron(): PCDaS token API not provided and not found on renviron. Please provide PCDaS API token."},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_sinasc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get new births data from SINASC — get_sinasc","title":"Get new births data from SINASC — get_sinasc","text":"Retrieves new births data PCDaS API.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_sinasc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get new births data from SINASC — get_sinasc","text":"","code":"get_sinasc(   agg,   agg_time = \"year\",   ano,   pcdas_token = NULL,   sexo = NULL,   more_filters = NULL,   fetch_size = 65000 )"},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_sinasc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get new births data from SINASC — get_sinasc","text":"agg character. Spatial aggregation level. uf_res UF residence. uf_ocor UF occurrence. regsaude_res regiao de saude residence. regsaude_ocor regiao de saude occurence. regsaude_449_res regiao de saude (449 units) residence. regsaude_449_ocor regiao de saude (449 units) occurence. mun_res municipality residence. mun_ocor municipality ocurrence. agg_time character. Time aggregation level. year yearly data. month monthly data. week weekly data. Defaults year. ano numeric. Year birth pcdas_token character. PCDaS API token. provided, function look renvirom. sexo character. Sex new birth Masculino males, Feminino females Ignorado unknown. more_filters character. Additional filters can added using parameter, SQL query. fetch_size character. Pagination size API call.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_sinasc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get new births data from SINASC — get_sinasc","text":"function uses raw data Sistema de Informações de Nascidos Vivos (SINASC) available PCDaS API. documentation data can found https://pcdas.icict.fiocruz.br/conjunto-de-dados/sistema-de-informacao-sobre-nascidos-vivos/.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_sinasc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get new births data from SINASC — get_sinasc","text":"","code":"# Some examples get_sinasc(agg = \"mun_res\", ano = 2010) #> Error in get_pcdas_token_renviron(): PCDaS token API not provided and not found on renviron. Please provide PCDaS API token. get_sinasc(agg = \"uf_ocor\", ano = 2010) #> Error in get_pcdas_token_renviron(): PCDaS token API not provided and not found on renviron. Please provide PCDaS API token."},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_text_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a description of a data frame — get_text_description","title":"Get a description of a data frame — get_text_description","text":"Get description data frame","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_text_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a description of a data frame — get_text_description","text":"","code":"get_text_description(   df,   prompt,   pcdas_token = NULL,   throttle_rate = 1,   max_tries = 10 )"},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_text_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a description of a data frame — get_text_description","text":"df data frame. prompt character. prompt asking data described. pcdas_token character. PCDaS API token. provided, function look renvirom. throttle_rate Rate requests per second allowed. Defaults 1 request per second. max_tries Max number retries fail. Defaults 10.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_text_description.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a description of a data frame — get_text_description","text":"character string.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/get_text_description.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a description of a data frame — get_text_description","text":"","code":"get_text_description(df = iris, prompt = \"This json data contains measurements of sepal length and width and petal length and width. Write a small paragraph describing the species. Do not mention the file format.\") #> Error in get_pcdas_token_renviron(): PCDaS token API not provided and not found on renviron. Please provide PCDaS API token."},{"path":"https://rfsaldanha.github.io/rpcdas/reference/list_pcdas_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"List PCDaS tables — list_pcdas_tables","title":"List PCDaS tables — list_pcdas_tables","text":"List PCDaS indexes available API token used.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/list_pcdas_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List PCDaS tables — list_pcdas_tables","text":"","code":"list_pcdas_tables(pcdas_token = NULL)"},{"path":"https://rfsaldanha.github.io/rpcdas/reference/list_pcdas_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List PCDaS tables — list_pcdas_tables","text":"pcdas_token character. PCDaS API token. provided, function look renvirom.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/list_pcdas_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List PCDaS tables — list_pcdas_tables","text":"vector.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/mun_reg_saude_449.html","id":null,"dir":"Reference","previous_headings":"","what":"Municipality and health region (449) code table — mun_reg_saude_449","title":"Municipality and health region (449) code table — mun_reg_saude_449","text":"dataset containing municipality health regions codes, following 449 units specification. #'","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/mun_reg_saude_449.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Municipality and health region (449) code table — mun_reg_saude_449","text":"","code":"mun_reg_saude_449"},{"path":"https://rfsaldanha.github.io/rpcdas/reference/mun_reg_saude_449.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Municipality and health region (449) code table — mun_reg_saude_449","text":"tibble 5,597 rows 2 variables: cod_mun municipality 6 digits code cod_reg_saude health region 5 digits code","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/pcdas_query_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute PCDaS query request — pcdas_query_request","title":"Execute PCDaS query request — pcdas_query_request","text":"Execute PCDaS API query request.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/pcdas_query_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute PCDaS query request — pcdas_query_request","text":"","code":"pcdas_query_request(   body,   pcdas_token = NULL,   throttle_rate = 1,   max_tries = 10 )"},{"path":"https://rfsaldanha.github.io/rpcdas/reference/pcdas_query_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute PCDaS query request — pcdas_query_request","text":"body Body request, JSON format. pcdas_token character. PCDaS API token. provided, function look renvirom. throttle_rate Rate requests per second allowed. Defaults 1 request per second. max_tries Max number retries fail. Defaults 10.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/pcdas_query_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute PCDaS query request — pcdas_query_request","text":"list","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://rfsaldanha.github.io/rpcdas/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/news/index.html","id":"rpcdas-040","dir":"Changelog","previous_headings":"","what":"rpcdas 0.4.0","title":"rpcdas 0.4.0","text":"New function use audio_description API endpoint text audio feature. New function use text_description API endpoint data text feature.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/news/index.html","id":"rpcdas-030","dir":"Changelog","previous_headings":"","what":"rpcdas 0.3.0","title":"rpcdas 0.3.0","text":"Health regions 449 units option.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/news/index.html","id":"rpcdas-020","dir":"Changelog","previous_headings":"","what":"rpcdas 0.2.0","title":"rpcdas 0.2.0","text":"Add month week aggregation. Query multiple years.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/news/index.html","id":"rpcdas-014","dir":"Changelog","previous_headings":"","what":"rpcdas 0.1.4","title":"rpcdas 0.1.4","text":"Verify token access index internally get_* functions.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/news/index.html","id":"rpcdas-013","dir":"Changelog","previous_headings":"","what":"rpcdas 0.1.3","title":"rpcdas 0.1.3","text":"Documentation correction.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/news/index.html","id":"rpcdas-012","dir":"Changelog","previous_headings":"","what":"rpcdas 0.1.2","title":"rpcdas 0.1.2","text":"Adds get_sih function basic filters.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/news/index.html","id":"rpcdas-011","dir":"Changelog","previous_headings":"","what":"rpcdas 0.1.1","title":"rpcdas 0.1.1","text":"Adds get_sinasc function basic filters.","code":""},{"path":"https://rfsaldanha.github.io/rpcdas/news/index.html","id":"rpcdas-010","dir":"Changelog","previous_headings":"","what":"rpcdas 0.1.0","title":"rpcdas 0.1.0","text":"First version get_sim basic functions.","code":""}]
